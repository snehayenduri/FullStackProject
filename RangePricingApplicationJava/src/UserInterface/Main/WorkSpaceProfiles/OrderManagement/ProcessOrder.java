/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Main.WorkSpaceProfiles.OrderManagement;

import UserInterface.ProductManagement.*;
import TheBusiness.Business.Business;
import TheBusiness.CustomerManagement.CustomerProfile;
import TheBusiness.MarketModel.MarketChannelAssignment;
import TheBusiness.MarketModel.SolutionOffer;
import TheBusiness.OrderManagement.MasterOrderList;
import TheBusiness.OrderManagement.Order;
import TheBusiness.OrderManagement.OrderItem;
import TheBusiness.ProductManagement.Product;
import TheBusiness.ProductManagement.ProductCatalog;
import TheBusiness.ProductManagement.ProductSummary;
import TheBusiness.SalesManagement.SalesPersonProfile;
import TheBusiness.SolutionOrders.MasterSolutionOrderList;
import TheBusiness.Supplier.Supplier;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kal bugrara
 */
public class ProcessOrder extends javax.swing.JPanel {

    /**
     * Creates new form ManageSuppliersJPanel
     */
    JPanel CardSequencePanel;
    Business business;
    Supplier selectedsupplier;
    SolutionOffer selectedSolutionOffer;
    CustomerProfile customer;
    SalesPersonProfile salesperson;
    MarketChannelAssignment marketChannel;

    public ProcessOrder(Business bz, CustomerProfile cp, SalesPersonProfile spp, JPanel jp) {

        CardSequencePanel = jp;
        this.business = bz;
        initComponents();
        customer = cp;
        salesperson = spp;
        salesPersonTextField.setText(salesperson.getPerson().toString());
        customerTextField.setText(customer.getCustomerId());
        MasterOrderList mol = business.getMasterOrderList();
        populateComboBox();

    }
    
    private void populateComboBox(){
        SuppliersComboBox.removeAllItems();
        for(MarketChannelAssignment mc :business.getMarketChannelComboCatalog().getMcalist()){
            SuppliersComboBox.addItem(mc);
        }
    }

    private void initializeTable(MarketChannelAssignment mc) {

        cleanUpTable();

            ArrayList<SolutionOffer> solutionOffers = mc.getSolutionofferlist();
            for (SolutionOffer so : solutionOffers) {

                Object[] row = new Object[5];
                row[0] = so;
                row[1] = so.getFloorPrice();
                row[2] = so.getCeilingPrice();
                row[3] = so.getTargetPrice();

                ((DefaultTableModel) SupplierCatalogTable.getModel()).addRow(row);
            }
    }

    public void cleanUpTable() {

        //Clean the product catalog table
        int rc = SupplierCatalogTable.getRowCount();
        int i;
        for (i = rc - 1; i >= 0; i--) {
            ((DefaultTableModel) SupplierCatalogTable.getModel()).removeRow(i);
        }
    }
//    public void cleanUpItemsTable() {
//
//        //Clean the product catalog table
//        int rc = OrderItemsTable.getRowCount();
//        int i;
//        for (i = rc - 1; i >= 0; i--) {
//            ((DefaultTableModel) OrderItemsTable.getModel()).removeRow(i);
//        }
//    }

//    public void refreshSupplierProductCatalogTable() {
//
////clear supplier table
//        int rc = SupplierCatalogTable.getRowCount();
//        int i;
//        for (i = rc - 1; i >= 0; i--) {
//            ((DefaultTableModel) SupplierCatalogTable.getModel()).removeRow(i);
//        }
//
//        String suppliername = (String) SuppliersComboBox.getSelectedItem();
//
//        selectedsupplier = business.getSupplierDirectory().findSupplier(suppliername);
//        if (selectedsupplier == null) {
//            return;
//        }
//        ProductCatalog pc = selectedsupplier.getProductCatalog();
//
//        for (Product pt : pc.getProductList()) {
//
//            Object[] row = new Object[5];
//            row[0] = pt;
//            row[1] = pt.getFloorPrice();
//            row[2] = pt.getCeilingPrice();
//            row[3] = pt.getTargetPrice();
////                row[1] = pt.getPerformanceMeasure();
////               row[2] = la.getName();
//            ((DefaultTableModel) SupplierCatalogTable.getModel()).addRow(row);
//        }
//
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        SupplierCatalogTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        customerTextField = new javax.swing.JTextField();
        salesPersonTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtTargetPrice = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtFloorPrice = new javax.swing.JTextField();
        txtCeilingPrice = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtSolution = new javax.swing.JLabel();
        txtSolutionOffer = new javax.swing.JTextField();
        SuppliersComboBox = new javax.swing.JComboBox<>();
        txtActualPrice = new javax.swing.JTextField();

        setBackground(new java.awt.Color(0, 153, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Market Channel");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 120, -1));

        SupplierCatalogTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Floor", "Ceiling", "Target"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        SupplierCatalogTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SupplierCatalogTableMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                SupplierCatalogTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(SupplierCatalogTable);

        jScrollPane2.setViewportView(jScrollPane1);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 600, 110));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel2.setText("Prepare Order");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 550, -1));

        jLabel8.setText("Solutions");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, 20));

        jLabel9.setText("Order Items");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, -1, 20));

        jButton1.setText("Order");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddProductItemActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 250, 90, 30));

        jLabel10.setText("Customer");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 50, 150, -1));

        customerTextField.setEnabled(false);
        add(customerTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 70, 160, -1));

        salesPersonTextField.setEnabled(false);
        add(salesPersonTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 70, 160, -1));

        jLabel11.setText("Sales person");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 50, 150, -1));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Business-wide Product Intelligence", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 14))); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setText("Target Price");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 50, 150, -1));
        jPanel1.add(txtTargetPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 70, 150, -1));

        jLabel4.setText("Floor Price");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 50, 150, -1));
        jPanel1.add(txtFloorPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 70, 150, -1));

        txtCeilingPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCeilingPriceActionPerformed(evt);
            }
        });
        jPanel1.add(txtCeilingPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 150, -1));

        jLabel5.setText("Ceiling Price");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 110, -1));

        txtSolution.setText("Solution Offer");
        jPanel1.add(txtSolution, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 110, -1));

        txtSolutionOffer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSolutionOfferActionPerformed(evt);
            }
        });
        jPanel1.add(txtSolutionOffer, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 150, -1));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 600, 170));
        jPanel1.getAccessibleContext().setAccessibleName("Business -wide Product Intelligence");

        SuppliersComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SuppliersComboBoxActionPerformed(evt);
            }
        });
        add(SuppliersComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 190, -1));
        add(txtActualPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 250, 160, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void SupplierCatalogTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SupplierCatalogTableMousePressed
        // TODO add your handling code here:
        int suppliertablesize = SupplierCatalogTable.getRowCount();
        int selectedrow = SupplierCatalogTable.getSelectionModel().getLeadSelectionIndex();

        if (selectedrow < 0 || selectedrow > suppliertablesize - 1) {
            return;
        }
        selectedSolutionOffer = (SolutionOffer) SupplierCatalogTable.getValueAt(selectedrow, 0);
        if (selectedSolutionOffer == null) {
            return;
        }
        txtSolutionOffer.setText(selectedSolutionOffer.toString());
        txtFloorPrice.setText(String.valueOf(selectedSolutionOffer.getFloorPrice()));
        txtTargetPrice.setText(String.valueOf(selectedSolutionOffer.getTargetPrice()));
        txtCeilingPrice.setText(String.valueOf(selectedSolutionOffer.getCeilingPrice()));

    }//GEN-LAST:event_SupplierCatalogTableMousePressed

    private void txtSolutionOfferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSolutionOfferActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSolutionOfferActionPerformed

    private void txtCeilingPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCeilingPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCeilingPriceActionPerformed

    private void SupplierCatalogTableMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SupplierCatalogTableMouseEntered
        // TODO add your handling code here:
        
    }//GEN-LAST:event_SupplierCatalogTableMouseEntered

    private void AddProductItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddProductItemActionPerformed
        // TODO add your handling code here:

        int suppliertablesize = SupplierCatalogTable.getRowCount();
        int selectedrow = SupplierCatalogTable.getSelectionModel().getLeadSelectionIndex();
        
        selectedSolutionOffer = (SolutionOffer) SupplierCatalogTable.getValueAt(selectedrow, 0);
        if (selectedSolutionOffer == null) return;
        int actualPrice = 0;
        try{
            actualPrice = Integer.parseInt(txtActualPrice.getText());
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this,"Enter a valid Actual Price");
            return;
        }
        if(actualPrice>selectedSolutionOffer.getCeilingPrice() || actualPrice<selectedSolutionOffer.getFloorPrice()){
            JOptionPane.showMessageDialog(this,"Enter a valid Actual Price");
            return;
        }
        if (selectedrow < 0 || selectedrow > suppliertablesize - 1) {
            return;
        }
        MasterSolutionOrderList msol = business.getMasterSolutionOrderList();
        msol.newSolutionOrder(selectedSolutionOffer, actualPrice, marketChannel, salesperson, customer);
        JOptionPane.showMessageDialog(this,"Order Placed");
 
            

    }//GEN-LAST:event_AddProductItemActionPerformed

    private void SuppliersComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SuppliersComboBoxActionPerformed
        // TODO add your handling code here:
        marketChannel = (MarketChannelAssignment)SuppliersComboBox.getSelectedItem();
        initializeTable(marketChannel);
    }//GEN-LAST:event_SuppliersComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable SupplierCatalogTable;
    private javax.swing.JComboBox<MarketChannelAssignment> SuppliersComboBox;
    private javax.swing.JTextField customerTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField salesPersonTextField;
    private javax.swing.JTextField txtActualPrice;
    private javax.swing.JTextField txtCeilingPrice;
    private javax.swing.JTextField txtFloorPrice;
    private javax.swing.JLabel txtSolution;
    private javax.swing.JTextField txtSolutionOffer;
    private javax.swing.JTextField txtTargetPrice;
    // End of variables declaration//GEN-END:variables

}
