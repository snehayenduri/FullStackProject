/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import Model.CourseCatalog.CourseCatalog;
import Model.CourseSchedule.CourseLoad;
import Model.CourseSchedule.CourseOffer;
import Model.Faculty.Professor;
import Model.People.StudentDirectory;
import Model.Persona.User;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author godalla
 */
public class ProfessorDashboardJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProfessorDashboardJPanel
     */
    JPanel workArea;
    Professor professor;
    User user;
    CourseLoad courseLoad;
    StudentDirectory studentDirectory;
    CourseCatalog courseCatalog;
    String semester;
    
    public ProfessorDashboardJPanel(JPanel workArea, Professor professor, User user, CourseLoad courseLoad, StudentDirectory studentDirectory, CourseCatalog courseCatalog, String semester) {
        initComponents();
        this.workArea = workArea;
        this.professor = professor;
        this.user = user;
        this.courseLoad = courseLoad;
        this.studentDirectory = studentDirectory;
        this.courseCatalog = courseCatalog;
        this.semester = semester;
        populateTableCourseHistory(semester);
        
//        DefaultTableModel model = (DefaultTableModel) tblCourses.getModel();
//        model.setRowCount(0);
//        for(CourseOffer courseOffer: courseLoad.getCourseOffers()){
//            if(courseOffer.getProfessor()==professor){
//                Object[] row = new Object[4];
//                row[0] = courseOffer;
//                row[1] = courseOffer.getCourse().getCourseName();
//                row[2] = courseOffer.getTiming();
//                row[3] = courseOffer.getSeatList().size();
//                model.addRow(row);
//                
//            }
//        }
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnManage = new javax.swing.JButton();
        dropDownSemesterCourseHistory = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableCourseHistory = new javax.swing.JTable();
        btnUpdateProfile = new javax.swing.JButton();
        btnOfferCourse = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel1.setText("Professor Dashboard");

        btnManage.setText("Manage");
        btnManage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageActionPerformed(evt);
            }
        });

        dropDownSemesterCourseHistory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Semester ", "Fall2023", "Spring2022", "Fall2022", "Spring2021", "Fall2021", " ", " " }));
        dropDownSemesterCourseHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropDownSemesterCourseHistoryActionPerformed(evt);
            }
        });

        jLabel3.setText("Course History ");

        tableCourseHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "CourseID", "Course", "Day&Time"
            }
        ));
        jScrollPane2.setViewportView(tableCourseHistory);

        btnUpdateProfile.setText("Update Profile");
        btnUpdateProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateProfileActionPerformed(evt);
            }
        });

        btnOfferCourse.setText("Offer Course");
        btnOfferCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOfferCourseActionPerformed(evt);
            }
        });

        jButton1.setText("<<Logout");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dropDownSemesterCourseHistory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(264, 264, 264)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnOfferCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnUpdateProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(btnManage)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(97, 97, 97))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(197, 197, 197)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel3)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(8, 8, 8)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(17, 17, 17)
                .addComponent(dropDownSemesterCourseHistory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdateProfile)
                    .addComponent(btnManage))
                .addGap(26, 26, 26)
                .addComponent(btnOfferCourse)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void dropDownSemesterCourseHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropDownSemesterCourseHistoryActionPerformed
        // TODO add your handling code here:
        String sem = dropDownSemesterCourseHistory.getSelectedItem().toString();
        populateTableCourseHistory(sem);
        
    }//GEN-LAST:event_dropDownSemesterCourseHistoryActionPerformed

    private void btnUpdateProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateProfileActionPerformed
        // TODO add your handling code here:
        ProfessorUpdateJPanel professorUpdateJPanel = new ProfessorUpdateJPanel(workArea, professor, user);
        workArea.add("professorUpdateJPanel", professorUpdateJPanel);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.next(workArea);
    }//GEN-LAST:event_btnUpdateProfileActionPerformed

    private void btnOfferCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOfferCourseActionPerformed
        // TODO add your handling code here:
        ProfessorCourseRegistrationJPanel professorCourseRegistrationJPanel = new ProfessorCourseRegistrationJPanel(workArea, professor, user, courseCatalog, courseLoad, semester);
        workArea.add("professorCourseRegistrationJPanel", professorCourseRegistrationJPanel);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.next(workArea);
    }//GEN-LAST:event_btnOfferCourseActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        workArea.remove(this);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.previous(workArea);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnManageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tableCourseHistory.getModel();
        int selectedRow = tableCourseHistory.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(this, "Please select a course");
            return;
        }
        CourseOffer courseOffer = (CourseOffer) model.getValueAt(selectedRow,1);
        ProfessorManageCourseJPanel professorManageCourse = new ProfessorManageCourseJPanel(workArea, courseLoad, courseOffer, studentDirectory);
        workArea.add("ProfessorManageCourse", professorManageCourse);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.next(workArea);
    }//GEN-LAST:event_btnManageActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnManage;
    private javax.swing.JButton btnOfferCourse;
    private javax.swing.JButton btnUpdateProfile;
    private javax.swing.JComboBox<String> dropDownSemesterCourseHistory;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableCourseHistory;
    // End of variables declaration//GEN-END:variables

    private void populateTableCourseHistory(String sem) {
        DefaultTableModel acctTbl = (DefaultTableModel) tableCourseHistory.getModel();
        acctTbl.setRowCount(0);
        String professorName = professor.getPerson().getFirstName()+" "+professor.getPerson().getLastName();
        for(CourseOffer courseOffer : courseLoad.getCourseOfferByProfInSem(professor, sem)){
            Object[] row = new Object[3];
            row[0] = courseOffer.getCourse().getCourseID();
            row[1] = courseOffer;
            row[2] = courseOffer.getTiming();
            
            acctTbl.addRow(row);
        }
    }
}
