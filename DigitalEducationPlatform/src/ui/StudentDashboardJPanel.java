/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;


import Model.CourseCatalog.CourseCatalog;
import Model.CourseSchedule.CourseLoad;
import Model.CourseSchedule.CourseOffer;
import Model.CourseSchedule.Seat;
import Model.Faculty.Professor;
import Model.People.Student;
import Model.Persona.User;
import java.awt.CardLayout;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author godalla
 */
public class StudentDashboardJPanel extends javax.swing.JPanel {

    /**
     * Creates new form StudentDashboardJPanel
     */
    Student student;
    JPanel workArea;
    User user;
    CourseLoad courseLoad;
    CourseCatalog courseCatalog;
    String semester;
    List<CourseOffer> courseOff;
    public StudentDashboardJPanel(JPanel workArea, Student student, User user, CourseLoad courseLoad, CourseCatalog courseCatalog, String semester) {
        initComponents();
        this.workArea = workArea;
        this.student = student;
        this.user = user;
        this.courseLoad = courseLoad;
        this.courseCatalog = courseCatalog;
        this.semester = semester;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnDisplayStudent = new javax.swing.JButton();
        btnUpdateStudentDetails = new javax.swing.JButton();
        btnRegisterCourses = new javax.swing.JButton();
        btnCheckTrancript = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCourseOffer = new javax.swing.JTable();
        semcombobox = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        txtRating = new javax.swing.JTextField();
        btnRate = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        btnDisplayStudent.setText("Display Student Details");
        btnDisplayStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDisplayStudentActionPerformed(evt);
            }
        });

        btnUpdateStudentDetails.setText("Update Student Details");
        btnUpdateStudentDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateStudentDetailsActionPerformed(evt);
            }
        });

        btnRegisterCourses.setText("Register Courses ");
        btnRegisterCourses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterCoursesActionPerformed(evt);
            }
        });

        btnCheckTrancript.setText("Check transcripts");
        btnCheckTrancript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckTrancriptActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel3.setText("Student Dashboard");

        tblCourseOffer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Course Name", "CourseID", "Credits", "Grade", "Professor"
            }
        ));
        jScrollPane1.setViewportView(tblCourseOffer);

        semcombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Semester ", "Fall2023", "Spring2022", "Fall2022", "Spring2021", "Fall2021" }));
        semcombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                semcomboboxActionPerformed(evt);
            }
        });

        jButton1.setText("<<Logout");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnRate.setText("Rate Professor");
        btnRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRateActionPerformed(evt);
            }
        });

        jButton2.setText("Drop Course");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(244, 244, 244)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnUpdateStudentDetails)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDisplayStudent)
                            .addComponent(semcombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRegisterCourses, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(497, Short.MAX_VALUE)
                .addComponent(btnCheckTrancript, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(454, 454, 454))
            .addGroup(layout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtRating, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnRate, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jButton1)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel3)
                        .addGap(35, 35, 35)
                        .addComponent(btnDisplayStudent)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdateStudentDetails)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRegisterCourses)
                .addGap(18, 18, 18)
                .addComponent(semcombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRate)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addComponent(btnCheckTrancript)
                .addGap(36, 36, 36))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDisplayStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDisplayStudentActionPerformed
        // TODO add your handling code here:
        StudentDisplayJPanel studentDisplay = new StudentDisplayJPanel(workArea, student, user);
        workArea.add("Student Display", studentDisplay);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.next(workArea);
    }//GEN-LAST:event_btnDisplayStudentActionPerformed

    private void btnUpdateStudentDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateStudentDetailsActionPerformed
        // TODO add your handling code here:
        StudentUpdateJPanel studentUpdate = new StudentUpdateJPanel(workArea, student, user);
        workArea.add("Student Update", studentUpdate);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.next(workArea);
        
    }//GEN-LAST:event_btnUpdateStudentDetailsActionPerformed

    private void btnRegisterCoursesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterCoursesActionPerformed
        // TODO add your handling code here:
        CourseRegistrationJPanel courseRegistration = new CourseRegistrationJPanel(workArea, student, courseLoad, courseCatalog, semester);
        workArea.add("CourseRegistration", courseRegistration);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.next(workArea);
    }//GEN-LAST:event_btnRegisterCoursesActionPerformed

    private void btnCheckTrancriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckTrancriptActionPerformed
        // TODO add your handling code here:
        TranscriptJPanel transcriptPanel = new TranscriptJPanel(workArea, student);
        workArea.add("TranscriptJPanel", transcriptPanel);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.next(workArea);
    }//GEN-LAST:event_btnCheckTrancriptActionPerformed

    private void semcomboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_semcomboboxActionPerformed
        // TODO add your handling code here:
         String sem = semcombobox.getSelectedItem().toString();
         List<CourseOffer> courseOffers= student.getCourseSchedule().getCourseOfferBySem(sem);
         this.courseOff = courseOffers;
         populateTable(courseOffers);
    }//GEN-LAST:event_semcomboboxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        workArea.remove(this);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.previous(workArea);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRateActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblCourseOffer.getModel();
        int selectedRow = tblCourseOffer.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(this,"Please select a course to rate.");
        }
        int rating = Integer.valueOf(txtRating.getText());
        if(rating >5 || rating <1){
            JOptionPane.showMessageDialog(this,"Enter a valid value");
            return;
        }
        Professor professor = ((CourseOffer)tblCourseOffer.getValueAt(selectedRow,0)).getProfessor();
        professor.getProfAverageOverallRating(rating);
        JOptionPane.showMessageDialog(this,"Professor Rated Succesfully");
    }//GEN-LAST:event_btnRateActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblCourseOffer.getModel();
        int selectedRow = tblCourseOffer.getSelectedRow();
        if(selectedRow<0){
            JOptionPane.showMessageDialog(this,"Please select a course to rate.");
            return;
        }
        CourseOffer courseOffer = (CourseOffer)tblCourseOffer.getValueAt(selectedRow,0);
        for(Seat seat: courseOffer.getSeatList()){
            if(student==seat.getStudent()){
                seat.setStudent(null);
                seat.setIsOccupied(false);
                seat.setGrade("");
            }
        }
        
        populateTable(courseOff);
        student.getCourseSchedule().getStudentCourses().remove(courseOffer);
        JOptionPane.showMessageDialog(this,"Course drop successfully!");
        
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheckTrancript;
    private javax.swing.JButton btnDisplayStudent;
    private javax.swing.JButton btnRate;
    private javax.swing.JButton btnRegisterCourses;
    private javax.swing.JButton btnUpdateStudentDetails;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> semcombobox;
    private javax.swing.JTable tblCourseOffer;
    private javax.swing.JTextField txtRating;
    // End of variables declaration//GEN-END:variables

    private void populateTable(List<CourseOffer> courseOffers) {
        DefaultTableModel acctTbl = (DefaultTableModel) tblCourseOffer.getModel();
        acctTbl.setRowCount(0);
        for(CourseOffer courseOffer : courseOffers){
            Object[] row = new Object[5];
            row[0] = courseOffer;
            row[1] = courseOffer.getCourse().getCourseID();
            row[2] = courseOffer.getCourse().getCredits();
            for(Seat seat: courseOffer.getSeatList()){
                if(seat.getStudent()==student){
                    row[3] = seat.getGrade();
                    break;
                    }
            }
            row[4] = courseOffer.getProfessor();
            
            acctTbl.addRow(row);
        }
    }
}
