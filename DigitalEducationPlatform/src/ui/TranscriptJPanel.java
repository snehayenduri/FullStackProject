/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import Model.CourseSchedule.CourseOffer;
import Model.StudentTranscripts.Transcripts;
import java.awt.CardLayout;
import java.util.Map;
import javax.swing.table.DefaultTableModel;
import Model.People.Student;
import javax.swing.JPanel;

/**
 *
 * @author godalla
 */
public class TranscriptJPanel extends javax.swing.JPanel {

    /**
     * Creates new form TranscriptJPanel
     */
    JPanel workArea;
    Student student;
//    public TranscriptJPanel(JPanel workArea, Student student) {
//        initComponents();
//        this.workArea = workArea;
//        this.student = student;
//        Transcripts transcript = student.getTranscript();
//        DefaultTableModel model = (DefaultTableModel) tblTranscript.getModel();
//        model.setRowCount(0);
//        for(Map.Entry<CourseOffer, String> map: transcript.getGrades().entrySet()){
//            Object[] row = new Object[5];
//            row[0] = map.getKey().getCourse().getCourseName();
//            row[1] = map.getKey().getCourse().getCourseID();
//            row[2] = map.getKey().getProfessor().getPerson().getFirstName() + " " + map.getKey().getProfessor().getPerson().getLastName();
//            row[3] = map.getValue();
//            row[4] = map.getKey().getSemester();
//            model.addRow(row);
//        }
//    }

    TranscriptJPanel(JPanel workArea, Student student) {
        initComponents();
        this.workArea = workArea;
        this.student = student;
        Transcripts transcript = student.getTranscript();
        DefaultTableModel model = (DefaultTableModel) tblTranscript.getModel();
        model.setRowCount(0);
        for(Map.Entry<CourseOffer, String> map: transcript.getGrades().entrySet()){
            Object[] row = new Object[5];
            row[0] = map.getKey().getCourse().getCourseName();
            row[1] = map.getKey().getCourse().getCourseID();
            row[2] = map.getKey().getProfessor().getPerson().getFirstName() + " " + map.getKey().getProfessor().getPerson().getLastName();
            row[3] = map.getValue();
            row[4] = map.getKey().getSemester();
            model.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTranscript = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        gradtxt = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel1.setText("Transcripts");

        tblTranscript.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Course", "CourseID", "Professor", "Grade", "Semester"
            }
        ));
        jScrollPane1.setViewportView(tblTranscript);

        jButton1.setText("Check Graduation Eligibility ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("<<Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(264, 264, 264))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 681, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(gradtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addGap(1, 1, 1)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(gradtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(93, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        workArea.remove(this);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.previous(workArea);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        boolean canGraduate = student.getTranscript().isEligibleForGraduation();
        if(canGraduate){
            gradtxt.setText("Yes! You have met your course requirements! You can graduate!");
            return;
        }
        else{
            gradtxt.setText("No! Course Requirements haven't been met!");
            return;
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField gradtxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTranscript;
    // End of variables declaration//GEN-END:variables
}
